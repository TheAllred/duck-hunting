{
  "version": 3,
  "sources": ["../knexfile.js", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/$duckId.tsx", "../app/knex.ts", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["require(\"dotenv\").config();\n\n/**\n * @type { Object.<string, import(\"knex\").Knex.Config> }\n */\nmodule.exports = {\n  [process.env.NODE_ENV || \"development\"]: {\n    client: \"pg\",\n    connection: {\n      connectionString: process.env.DATABASE_URL,\n    },\n    migrations: {\n      tableName: \"migrations\",\n    },\n  },\n};\n", "export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: didError ? 500 : responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { json, LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { notFound } from \"remix-utils\";\n\nimport knex from \"~/knex\";\n\nexport async function loader({ params }: LoaderArgs) {\n  const duck = await knex(\"ducks\").where(\"id\", params.duckId).first();\n\n  if (!duck) {\n    throw notFound({ message: \"Duck Not Found!\" });\n  }\n\n  await knex(\"user_ducks\")\n    .insert({\n      user_id: \"1\",\n      duck_id: duck.id,\n    })\n    .onConflict([\"user_id\", \"duck_id\"])\n    .ignore();\n\n  return json({\n    duck: duck,\n  });\n}\n\nexport default function () {\n  const { duck } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <div>duck id: {duck.id}</div>\n      <div>duck name: {duck.name}</div>\n    </>\n  );\n}\n", "import Knex from \"knex\";\nimport knexfile from \"../knexfile\";\n\nconst knex = Knex(knexfile[process.env.NODE_ENV || \"development\"]);\n\nexport default knex;\n", "import { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport knex from \"~/knex\";\n\nexport async function loader() {\n  const leaderBoard: { id: string; username: string; count: string }[] =\n    await knex(\"user_ducks\")\n      .select(\"users.id\")\n      .select(\"users.username\")\n      .count()\n      .join(\"users\", \"users.id\", \"user_ducks.user_id\")\n      .groupBy(\"users.id\")\n      .groupBy(\"users.username\")\n      .orderBy(\"count\", \"desc\")\n      .limit(100);\n\n  return json({\n    leaderBoard,\n  });\n}\n\nexport default function Index() {\n  const { leaderBoard } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <ul>\n        {leaderBoard.map((boardEntry) => (\n          <li>\n            {boardEntry.username}:{boardEntry.count}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n", "export default {'version':'f586edc4','entry':{'module':'/build/entry.client-PI43H4MJ.js','imports':['/build/_shared/chunk-JRKOYVL2.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-4ICFY2NN.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$duckId':{'id':'routes/$duckId','parentId':'root','path':':duckId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$duckId-Y7MNW23K.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-FFUO2J25.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F586EDC4.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/$duckId.tsx\";\nimport * as route2 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$duckId\": {\n      id: \"routes/$duckId\",\n      parentId: \"root\",\n      path: \":duckId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["module", "isbot", "import_react", "import_jsx_dev_runtime", "import_node", "import_react", "Knex", "knexfile", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader"]
}
